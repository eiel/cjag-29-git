* 全体像
** 目的
GitHubで成果物を公開する
とりあえず、使ってみることに重点をおく
** 対象者
バージョン管理システムを利用していない人
** 必要なこと
- gitをインストールする
  - Mac
    - GitHub for mac
    - コマンド Xcode
  - Windows
    - GitHub for windows
    - コマンド msysgit
  - コマンド
- GitHubのアカウントを作成する
- gitの基本操作を学ぶ
  - commitの作り方
** おまけで説明できたら良いこと
- GitHubの使い方
- Gitの使い方
* スライドラフ
** 本日の目標
GitHubのアカウントをつくる
成果物をGitHubに公開する
*** 時間があれば
GitHubについてもっと詳しく
gitについてもっと詳しく
** GitHubとはなんぞや
- GitHub is the best way to collaborate with others. Fork, send pull requests and manage all your public and private git repositories.
  GitHubは他の人と共同して作業するのに最高の方法だ。フォークして、プル リクエストを送り、公開非公開問わずgitリポジトリを管理する。
- Git is an extremely fast, efficient, distributed version control system ideal for the collaborative development of software.
  Git は非常に速い、使いやすい、ソフテウェアを共同して開発するのに理想的な分散バージョン管理システム
# バージョン管理システムを利用したことがない人がいるか確認すること
- jQuery reddit, Spaakle, curl, Ruby on Rails, ClickToFlash, Erlang/OTP, CakePHP, Redis…。gitで管理されているプロジェクトはたくさんある。
- つまり
  - Gitはソフトウェアの開発に必須ツール。
  - ちょっとづつ使ってなれましょう
- 基本無料でprivateリボジトリを作りたい場合、有料です。
- GitHub は SNSです。(岡山の人がいってた。僕もそう思います。)
** GitHubのアカウントをつくる
- 画像で
*** GitHubの画面説明
- 画面で
*** インストール
**** Mac
- GUIツール
  http://mac.GitHub.com/
- CUI
  http://git-scm.com/download/mac
  Xcodeにもついてきます
**** Windows
- GUIツール
  http://windows.GitHub.com/
- CUI
  http://git-scm.com/download/win
**** UNIX like
$ yum install git-core

$ apt-get install git

$ emerge dev-vcs/git

$ pacman -S git

$ cd /usr/ports/devel/git
$ make install

$ pkg install developer/versioning/git

$ pkg_add git
*** 初期設定
$ git config --global user.name "なまえ"
$ git config --global user.email メールアドレス
$ git config --global color.ui auto
*** Eclipse プラグインは？
http://www.eclipse.org/egit/
説明しません
** GitHubでプロジェクトを公開する
- リポジトリを作る
- コミットをつくる
- プッシュする
*** 用語説明
- リポジトリ
バージョン管理する上で必要なものをすべて保存してあるところ
- コミット
いつでも後からに戻せるポイント。
application,application_20120712,application_20120724
- プッシュ
リポジトリに蓄積した情報を公開サーバヘ送る
*** GUI編
- 画像で
*** CUI編
**** リポジトリを作る
$ cd PROJECT_ROOT
$ git init
**** コミットをつくる
$ git add .
$ git commit
**** プッシュする
リモートリポジトリを作成(GitHubで…)
$ git remote add origin git@github.com:eiel/PROJECT_NAME.git
$ git push origin master
# -u をつけておくと今後は git push でプッシュできる
** よし開発していこう
- きりがよいところでマメにコミットしよう
  - もどせるポイントは多いに越したことはない。コミットが小さいほうが何を変更したのかわかりすい。
** もっとGitHubを使おう
- 友達をフォローしよう
- 気になる人をフォローしよう
- 気になるプロジェクトをウォッチしよう
- フォローした人やウォッチしたプロジェクトに絡め。
  - 友達がリポジトリを作ったらとりあえず見てみよう。
  - バグをみつけたらIssuesに登録しよう
  - 勝手になおしてpull requestを出そう
- etc...
** もっとgitを使おう
- shellに現在のbranchを
- aliasを使う
- 色をつけよう
- コミットしたくないファイルを登録しておこう
- ブランチをつかいこなそう
- 内部構造を勉強しよう(トラブルにつよくなる)
- etc...
** 参考になりそうな文献とか
- http://git-scm.com/book/ja Pro Gitの日本語訳
- $ man 1 git
